{
  "p1": {
    "name": "Problem 1",
    "executable": "p1",
    "inputFormat": "The first line contains an integer T (1 <= T <= 1000), the number of test cases. Each test case consists of a single line containing two space-separated integers a and b (-10^6 <= a, b <= 10^6).",
    "outputFormat": "For each test case, print a single integer on a new line.",
    "exampleInput1": "2\n5 3\n-2 8",
    "exampleOutput1": "8\n6",
    "exampleInput2": "2\n100 -50\n-10 -20",
    "exampleOutput2": "50\n-30",
    "sample-input": "2\n5 3\n-2 8"
  },
  "p2": {
    "name": "Problem 2",
    "executable": "p2",
    "inputFormat": "The first line contains an integer T (1 <= T <= 1000), the number of test cases. Each test case consists of a single line containing a string s (1 <= |s| <= 100).",
    "outputFormat": "For each test case, print the reversed string on a new line.",
    "exampleInput1": "2\nhello\nworld",
    "exampleOutput1": "olleh\ndlrow",
    "exampleInput2": "2\nabcde\nOpenAI",
    "exampleOutput2": "edcba\nIAnepO",
    "sample-input": "2\nhello\nworld"
  },
  "p3": {
    "name": "Problem 3",
    "executable": "p3",
    "inputFormat": "The first line contains an integer T (1 <= T <= 1000), the number of test cases. Each test case consists of two lines: the first line contains an integer n (1 <= n <= 1000), the second line contains n space-separated integers (-10^6 <= a_i <= 10^6).",
    "outputFormat": "For each test case, print a single integer on a new line.",
    "exampleInput1": "2\n3\n1 2 3\n4\n-1 -2 -3 -4",
    "exampleOutput1": "6\n-10",
    "exampleInput2": "2\n5\n10 20 30 40 50\n3\n7 8 9",
    "exampleOutput2": "150\n24",
    "sample-input": "2\n3\n1 2 3\n4\n-1 -2 -3 -4"
  },
  "p4": {
    "name": "Problem 4",
    "executable": "p4",
    "inputFormat": "The first line contains an integer T (1 <= T <= 1000), the number of test cases. Each test case consists of two lines: the first line contains an integer n (1 <= n <= 1000), the second line contains n space-separated integers (-10^6 <= a_i <= 10^6).",
    "outputFormat": "For each test case, print a single integer on a new line.",
    "exampleInput1": "2\n3\n1 2 3\n4\n-1 -2 -3 -4",
    "exampleOutput1": "3\n-1",
    "exampleInput2": "2\n5\n10 20 30 40 50\n3\n7 8 9",
    "exampleOutput2": "50\n9",
    "sample-input": "2\n3\n1 2 3\n4\n-1 -2 -3 -4"
  },
  "p5": {
    "name": "Problem 5",
    "executable": "p5",
    "inputFormat": "The first line contains an integer T (1 <= T <= 1000), the number of test cases. Each test case consists of a single integer n (1 <= n <= 30).",
    "outputFormat": "For each test case, print Pascal's Triangle up to the nth row, with each row on a new line. Each test case should be separated by a blank line.",
    "exampleInput1": "2\n3\n4",
    "exampleOutput1": "1\n1 1\n1 2 1\n\n1\n1 1\n1 2 1\n1 3 3 1",
    "exampleInput2": "2\n2\n5",
    "exampleOutput2": "1\n1 1\n1\n1 1\n1 2 1\n1 3 3 1\n1 4 6 4 1",
    "sample-input": "2\n3\n4"
  }
}
